{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/deeidowu/Desktop/2020-Coding-Content/Portfolio2020/ReactProjects/React-COVID-Tracker/front-end/src/components/Chart/Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    deaths,\n    recovered\n  },\n  country\n}) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    console.log(dailyData);\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 28\n  }, this) : null;\n  const barChart = confirmed ? /*#__PURE__*/_jsxDEV(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(255, 0, 0, 0.5', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: country ? barChart : lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"/d+kuJuKj12qpSq7YzoKfQOF8wE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/deeidowu/Desktop/2020-Coding-Content/Portfolio2020/ReactProjects/React-COVID-Tracker/front-end/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","console","log","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","title","text","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAAP;AAAuCC,EAAAA;AAAvC,CAAD,KAAoD;AAAA;;AAC9D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMa,QAAQ,GAAG,YAAU;AACzBD,MAAAA,YAAY,CAAE,MAAMX,cAAc,EAAtB,CAAZ;AACD,KAFD;;AAIAa,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEAE,IAAAA,QAAQ;AACX,GARQ,EAQN,EARM,CAAT;AAUA,QAAMG,SAAS,GACZL,SAAS,CAACM,MAAV,gBAAoB,QAAC,IAAD;AACf,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEP,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPf,QAAAA,IAAI,EAAEK,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACZ,UAAAA;AAAD,SAAD,KAAgBA,SAA9B,CADC;AAEPe,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAMP;AACClB,QAAAA,IAAI,EAAEK,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACX,UAAAA;AAAD,SAAD,KAAaA,MAA3B,CADP;AAECc,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICE,QAAAA,eAAe,EAAE,sBAJlB;AAKCD,QAAAA,IAAI,EAAE;AALP,OANO;AAFR;AADS;AAAA;AAAA;AAAA;AAAA,UAApB,GAiBO,IAlBV;AAqBA,QAAME,QAAQ,GACVnB,SAAS,gBACL,QAAC,GAAD;AACI,IAAA,IAAI,EAAE;AACFW,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADN;AAEFG,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,QADA;AAEPG,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAChB,qBADgB,EAEhB,sBAFgB,CAFV;AAKNnB,QAAAA,IAAI,EAAE,CAACC,SAAS,CAACoB,KAAX,EAAkBlB,SAAS,CAACkB,KAA5B,EAAmCnB,MAAM,CAACmB,KAA1C;AALA,OAAD;AAFR,KADV;AAWI,IAAA,OAAO,EAAG;AACNC,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADF;AAENC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAG,oBAAmBrB,OAAQ;AAAlD;AAFD;AAXd;AAAA;AAAA;AAAA;AAAA,UADK,GAiBL,IAlBR;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC4B,SAAvB;AAAA,cACKtB,OAAO,GAAGgB,QAAH,GAAcV;AAD1B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA9DD;;GAAMX,K;;KAAAA,K;AAgEN,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\n\nconst Chart = ({data: {confirmed, deaths, recovered}, country}) =>{\n    const [dailyData, setDailyData] = useState({});\n\n    useEffect(()=>{\n        const fetchAPI = async() =>{\n          setDailyData (await fetchDailyData());\n        }\n\n        console.log(dailyData);\n\n        fetchAPI();\n    }, [])\n\n    const lineChart = (\n       dailyData.length ? (<Line\n            data={{\n                labels: dailyData.map(({date}) => date),\n                datasets: [{\n                    data: dailyData.map(({confirmed})=> confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n\n                }, {\n                    data: dailyData.map(({deaths})=> deaths),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true,  \n                }],\n            }}\n        />) : null\n    );\n\n    const barChart = (\n        confirmed ? (\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)',\n                         'rgba(255, 0, 0, 0.5',\n                         'rgba(255, 0, 0, 0.5)'],\n                         data: [confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options ={{\n                    legend: {display: false},\n                    title: {display: true, text: `Current state in ${country}`}\n                }}\n             />\n        ) : null\n\n    )\n\n\n    return(\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}