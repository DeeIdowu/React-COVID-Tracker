{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/deeidowu/Desktop/2020-Coding-Content/Portfolio2020/ReactProjects/React-COVID-Tracker/front-end/src/components/Chart/Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = () => {\n  _s();\n\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    console.log(dailyData);\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length !== 0 ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData(({\n          deaths\n        }) => deaths),\n        label: 'Infected',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 34\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"/d+kuJuKj12qpSq7YzoKfQOF8wE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/deeidowu/Desktop/2020-Coding-Content/Portfolio2020/ReactProjects/React-COVID-Tracker/front-end/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","dailyData","setDailyData","fetchAPI","console","log","lineChart","length","labels","date","datasets","data","confirmed","label","borderColor","fill","deaths","backgroundColor","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAGA,MAAMC,KAAK,GAAG,MAAK;AAAA;;AACf,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMQ,QAAQ,GAAG,YAAU;AACzBD,MAAAA,YAAY,CAAE,MAAMN,cAAc,EAAtB,CAAZ;AACD,KAFD;;AAIAQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEAE,IAAAA,QAAQ;AACX,GARQ,EAQN,EARM,CAAT;AAUA,QAAMG,SAAS,GACZL,SAAS,CAACM,MAAV,KAAqB,CAArB,gBAA0B,QAAC,IAAD;AACrB,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEP,SAAS,CAAC,CAAC;AAACQ,QAAAA;AAAD,OAAD,KAAYA,IAAb,CADf;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAEV,SAAS,CAAC,CAAC;AAACW,UAAAA;AAAD,SAAD,KAAgBA,SAAjB,CADR;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAMP;AACCJ,QAAAA,IAAI,EAAEV,SAAS,CAAC,CAAC;AAACe,UAAAA;AAAD,SAAD,KAAaA,MAAd,CADhB;AAECH,QAAAA,KAAK,EAAE,UAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,sBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OANO;AAFR;AADe;AAAA;AAAA;AAAA;AAAA,UAA1B,GAiBO,IAlBV;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACmB,SAAvB;AAAA,cACKZ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvCD;;GAAMN,K;;KAAAA,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\n\nconst Chart = () =>{\n    const [dailyData, setDailyData] = useState({});\n\n    useEffect(()=>{\n        const fetchAPI = async() =>{\n          setDailyData (await fetchDailyData());\n        }\n\n        console.log(dailyData);\n\n        fetchAPI();\n    }, [])\n\n    const lineChart = (\n       dailyData.length !== 0 ? (<Line\n            data={{\n                labels: dailyData(({date}) => date),\n                datasets: [{\n                    data: dailyData(({confirmed})=> confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n\n                }, {\n                    data: dailyData(({deaths})=> deaths),\n                    label: 'Infected',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true,  \n                }],\n            }}\n        />) : null\n    );\n\n    return(\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    )\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}